<?xml version="1.0"?>
<robot name="caster" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="2.45"/>
  <xacro:property name="base_length" value="10.75"/>
  <xacro:property name="base_height" value="2.0"/>

  <xacro:property name="cabin1_height" value="2.5"/>
  <xacro:property name="cabin2_height" value="2.0"/>
  <xacro:property name="cabin1_length" value="1.0"/>
  <xacro:property name="cabin2_length" value="0.25"/>

  <xacro:property name="wheel_radius" value="0.46"/>
  <xacro:property name="wheel_width" value="0.26"/>
  <xacro:property name="wheel_zoff" value="${wheel_radius/2}"/>
  <xacro:property name="space_btw_wheel" value="0.1"/>

  <xacro:property name="caster_xoff" value="0.14"/>

  <!-- Includes -->
  <xacro:include filename="$(find sam_bot_description)/src/description/inertia_property.urdf"/>
  
  <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Black">
        <color rgba="0 0 0 1.0"/>
      </material>
    </visual>

        <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="15" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

    <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

    <!-- Cabin1 -->
  <link name="cabin1_link">
    <visual>
      <geometry>
        <box size="${cabin1_length} ${base_width} ${cabin1_height}"/>
      </geometry>
      <material name="Orange">
        <color rgba="1.0 0.65 0.0 1.0"/>
      </material>
    </visual>

        <collision>
      <geometry>
        <box size="${cabin1_length} ${base_width} ${cabin1_height}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_cabin1_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cabin1_link"/>
    <origin xyz="${base_length/2+cabin1_length/2} 0.0 ${wheel_radius-(cabin1_height/2-base_height/2)}" rpy="0 0 0"/>
  </joint>

    <!-- Cabin2 -->
  <link name="cabin2_link">
    <visual>
      <geometry>
        <box size="${cabin2_length} ${base_width} ${cabin2_height}"/>
      </geometry>
      <material name="Orange">
        <color rgba="1.0 0.65 0.0 1.0"/>
      </material>
    </visual>

        <collision>
      <geometry>
        <box size="${cabin2_length} ${base_width} ${cabin2_height}"/>
      </geometry>
    </collision>
  </link>

  <joint name="base_cabin2_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cabin2_link"/>
    <origin xyz="${base_length/2+cabin1_length+cabin2_length/2} 0.0 ${wheel_radius-(cabin1_height-cabin2_height)}" rpy="0 0 0"/>
  </joint>

  <!-- Wheels -->
  <xacro:macro name="back_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    
    <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*(base_length/2-wheel_radius)} ${y_reflect*(base_width/2+wheel_width/2)} ${-base_height/2}" rpy="0 0 0" />
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:back_wheel prefix="drivebackwhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:back_wheel prefix="drivebackwhl_r" x_reflect="-1" y_reflect="-1" />

  <xacro:macro name="middle_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    
    <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*(base_length/2-wheel_radius*3-space_btw_wheel)} ${y_reflect*(base_width/2+wheel_width/2)} ${-base_height/2}" rpy="0 0 0" />
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:middle_wheel prefix="drivemiddlewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:middle_wheel prefix="drivemiddlewhl_r" x_reflect="-1" y_reflect="-1" />

  <xacro:macro name="front_wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Grey">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
    
    <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*(base_length/2)} ${y_reflect*(base_width/2+wheel_width/2)} ${-base_height/2}" rpy="0 0 0" />
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:front_wheel prefix="drivefrontwhl_l" x_reflect="1" y_reflect="1" />
  <xacro:front_wheel prefix="drivefrontwhl_r" x_reflect="1" y_reflect="-1" />

  <!-- Include Odometry Sensor-->
  <xacro:include filename="$(find sam_bot_description)/src/description/odometry_description.urdf"/>

</robot>
